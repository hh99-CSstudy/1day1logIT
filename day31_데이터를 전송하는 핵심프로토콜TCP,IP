## 프로토콜

양측이 상호작용 하는 방식에 관한 규칙을 정의함
각 물리적 네트워크는 IP를 전달할 고유의 형식이 존재하며 IP 레벨 위에서 TCP가 안정적인 통신을 제공하므로 우리가 코딩을 할 때 이러한 형식을 고려할 필요가 없다.


![](https://velog.velcdn.com/images/hi4656/post/6211e0e5-bf25-47c7-80d9-708b4bd94899/image.png)

## IP
> #### 인터넷 프로토콜
개별 패킷의 형식을 지정하고 패킷을 전송하는 방법을 정의함

- 신뢰성 없는, 비 연결형인 전송 서비스
- 비 연결형은 IP 패킷이 자립적이며 다른 IP 패킷과 관련이 없음. 상태를 관리, 기억하지 않음
- 신뢰성이 없는 것은 IP 패킷이 잘 전송되는 것을 보장하지 않음
- 최대 크기는 65KB로 분할되어 전송되고 재조합됨
- 타임투리브(TTL). 게이트웨이를 거칠 때 마다 1씩 감소하는 1바이트 필드로, 개별 패킷이 영원히 살아서 돌아다니는 문제를 해결함
- 데이터 전송 속도에 대해 보장하지 않음

## TCP 
> #### 전송 제어 프로토콜
IP패킷을 데이터 스트림으로 결합하고 서비스에 연결하는 방법을 정의함.

- 신뢰성이 없는 IP 프로토콜을 신뢰성 있는 양방향 통신으로 만듬
- 데이터를 한쪽 끝에 넣으면 반대 쪽 끝에서 나옴. 
- 바이트 스트림이 여러 조각으로 나위어 **세그먼트라고** 하는 TCP 패킷에 담김. 해당 TCP 세그먼트는 제어 정보를 포함하는 헤더가 있어 각 패킷이 스트림의 어느 부분을 나타내는지 알수 있게 해주는 시퀀스 번호가 포함됨.
- 수신자는 각 세그먼트에 대해 긍정/부정으로 확인 응답을 보내고, 긍정 응답을 알맞게 받지 못하면 세그먼트가 분실되었다 추청하여 다시 보내줌

TCP 연결이 설정되면, 그 연결은 해당 컴퓨터의 특정 포트와도 연결됨
호스트는 각 포트를 이용해 서로 다른 TCP 대화를 동시에 진행할 수 있음 (EX: 메일서버 25번포트, 웹접근 80번포트)
